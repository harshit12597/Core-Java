/*31.	Create a class Student with 2 data members rno and name.
       Create one method setData() that takes roll number and student name as parameter 
        and stores them in data members rno and name. 
      Create one more method showData() to print the data member values. 
      Create another class ( main class) StudentDemo that creates Student class object and calls setData() 
       and showData() methods.*/


class student{
      private int rno;
      private String name;


       void setData(int rno,String name)
          {
             this.rno=rno;
             this.name=name;              
          }
           
       void show()
        {
              System.out.println("studentRollno = "+rno+"  studentName = "+name);

        }
             
}

class studentDemo{

        public static void main(String args[]){
                student s= new student();
                  s.setData(116,"Despacito"); 
                  s.show();

          }


}
===============================================================================================================

/*32.	Modify the above program (no. 30) to count the no of Student objects created. [ In this program static variable is required ]*/


class student{
      private int rno;
      private String name;
        
         
      static int noOfObjects = 0; 
  
    // Instead of performing increment in the constructor 
    // instance block is preferred to make this program generic. 
    { 
        noOfObjects += 1; 
    }           

         
       void setData(int rno,String name)
          {
             this.rno=rno;
             this.name=name; 
            // noOfObjects += 1;              
          }
           
       void show()
        {
              System.out.println("studentRollno = "+rno+"  studentName = "+name);

        }
             
}

class studentDemo{

        public static void main(String args[]){
                student s= new student();
                  s.setData(116,"Despacito"); 
                  s.show();
              
                
         // We can also write t1.noOfObjects or 
         // t2.noOfObjects or t3.noOfObjects 
         System.out.println(student.noOfObjects); 


          }


}
===============================================================================================================

/*34.	Create a class Circle that has two data members, one to store the radius and another to store area
    and 
  three methods first init() method to input radius from user,
  second calculateArea() method to calculate area of circle and
  third display() method to display values of radius and area. 
  Create class CircleDemo ( main class) that creates the Circle object and calls init(), calculateArea() and display() methods.*/


import java.util.Scanner;
class circle{
      private double radius;
      private double area;

      void init(double radius)
       {
              this.radius=radius;

       }    
   
       void calculateArea()
        {
                  area=3.14*radius*radius;
                  

         }

        void show()
        {
              System.out.println("The area of circle is = "+area);

        }

}

class circleDemo
{
     public static void main(String args[])
     {

         Scanner sc=new Scanner(System.in);
         circle ar[]=new circle[2];
         
                    
          for(int i=0;i<ar.length;i++)
          {
              System.out.println("Enter the radius : ");
              double radius1 = sc.nextDouble();

                        
             circle c=new circle(); 
             c.init(radius1);
             c.calculateArea();
           //  c.show();      
             ar[i]=c;

          }

          ar[0].show();
          ar[1].show();

       
        
    }
}

===============================================================================================================
/*35.	Create a class MathOperation that has four static methods. 
  add() method that takes two integer numbers as parameter and returns the sum of the numbers.
  subtract() method that takes two integer numbers as parameter and returns the difference of the numbers.   multiply() method that takes two integer numbers as parameter and returns the product.
  power() method that takes two integer numbers as parameter and returns the power of first number to second number.
 Create another class Demo (main class) that takes the two numbers from the user
 and calls all four methods of MathOperation class by providing entered numbers and prints the return values of every method.*/



import java.util.Scanner;

class MathOperation{
      
         private int x;
         private int y;


        static void add(int i,int j)
        {   int a;    
            a=i+j;
            System.out.println("Subtraciton  is = "+a);

        }
 
        static void subtract(int i,int j)
        {
           int a;    
            a=i-j;
            System.out.println("Multipilcation is = "+a);
          
        }

        static void multiply(int i,int j)
        {
           int a;    
            a=i*j;
            System.out.println("Addition is = "+a);
         
        }
       
        static void show(int res)
        {

           System.out.println(res);
        }
         

}
class Demo{

         public static void main(String args[])
         {
          Scanner sc=new Scanner(System.in);
           System.out.println("Enter the 1st number: ");
              int x= sc.nextInt();
           System.out.println("Enter the 2nd number: ");
              int y= sc.nextInt();

          // MathOperation m=new MathOperation();
               MathOperation.add(x,y);
               MathOperation.subtract(x,y);
               MathOperation.multiply(x,y);
              //MathOperation.show();

         }


}


===============================================================================================================

/*36.	Create a class MathOperation containing overloaded methods ‘multiply’ to calculate multiplication of following arguments. 
a.	 two integers 
b.	 three floats 
c.	 all elements of array 
d.	one double and one integer 
*/


import java.util.Scanner;

class MathOperation{
      
         private double x;
         private double y;


        static void multiply(int i,int j)
        {
            double a;    
            a=i*j;
            System.out.println("Multiplication is = "+a);
         
        }
        
        static void multiply(float i,float j,float k)
        {
            double a;    
            a=i*j*k;
            System.out.println("Multiplication is = "+a);
         
        }

       static void multiply(double i,int j)
        {
           double a;    
            a=i*j;
            System.out.println("Multiplication is = "+a);
         
        }

        
         public static void main(String args[])
         {
         /* Scanner sc=new Scanner(System.in);
           System.out.println("Enter the 1st number: ");
              double x= sc.nextDouble();
           System.out.println("Enter the 2nd number: ");
              double y= sc.nextDouble();*/

                MathOperation.multiply(10,20);
               MathOperation.multiply(12.2f,13.2f,14.2f);
                MathOperation.multiply(12.4,10);
            

         }

        
        
       }

===============================================================================================================
/*37.	Create a class Person with properties (name and age) with following features. 
a.	Default age of person should be 18.
b.	A person object can be initialized with name and age.
c.	Method to display name and age of person
Create another class PersonDemo ( main class ) that demonstrates the functionalities of Person class by creating Person object and calling methods.
*/


class person{

     private String name;
     private int age;

     person(String name,int age)
     {
        this.name=name;
        this.age=age;
     }
      
     void show()
      {
    
             System.out.println(name+"  "+age);

      }

}

class persondemo{

      public static void main(String args[])
      {
           person p1=new person("shubham",101);
             p1.show();  

      }

}


===============================================================================================================
38.	Create a class Employee with three data members (empNo, salary and totalSalary) and following features.
a.	Only parameterized constructor. [Do not overload the constructor]
b.	totalSalary always represents salary total of all the employees created.
c.	empNo should be auto incremented.
d.	display total employees and totalSalary using a method.
Create another class EmployeeDemo (main class) that creates some Employee objects and calls Employee method to display no. of employees and total of their salaries.
--->
class Employee
{
	private static int empNo=0;
	private float salary;
	private static float totalSalary;
	Employee(float salary)
	{
		empNo++;
		this.salary=salary;
		totalSalary+=salary;
	}
	static void calTotalSalary()
	{
		System.out.println(totalSalary);
	}
	void display()
	{
		System.out.println(empNo+" "+salary);
	}
}
class EmployeeDemo
{
	public static void main(String args[])
	{
		Employee e=new Employee(2000);
		Employee e1=new Employee(2000);
		Employee e2=new Employee(2000);
		e.display();
		e1.display();
		e2.display();
		Employee.calTotalSalary();
	}
}


===============================================================================================================

39.	Create class Product with three data members (pid, price, quantity) and parameterized constructor that takes values for all three data members.  
Create a main method in different class (say ProductDemo) and perform following task:
a. Accept information for five Product objects from user and store objects in an array
b. Find pid of product with highest price. 
c. Create a static method (with array of product’s object as argument) in Product class to calculate and return total amount spent on all products. ( amount spent on single product = price of product * quantity of product )
------>
import java.util.*;

class Product{
    int pid;
    double price;
    int qty;
    
    public Product(){
         this.pid = 0;
        this.price = 0;
        this.qty = 0;
    }
    
    public Product(int pid, double price, int qty){
        this.pid = pid;
        this.price = price;
        this.qty = qty;
    }
    
    public void display(){
        System.out.println("Pid : "+this.pid+", Price : "+this.price+", Quantity : "+this.qty);
    }
    
    public static double calAmount(Product []arr){
        double totalAmount=0;
        for(int i =0; i<arr.length; i++){
            double productAmt = arr[i].price * arr[i].qty;
            totalAmount += productAmt;
        }
        return totalAmount;
    }
}

public class ProductDemo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc = new Scanner(System.in);
		Product arr[] = new Product[5];
	    
	    for(int i =0; i<5 ; i++){
	        System.out.println("Enter pid, price and quantity for the Product : ");
	        int id = sc.nextInt();
	        double price = sc.nextDouble();
	        int q = sc.nextInt();
	        
	        Product item = new Product(id, price, q);
	        arr[i] = item;
	    }
	    double max = 0;
	    int id=arr[0].pid;
	    int qty=arr[0].qty;
	    for(int i=0; i<5; i++){
	        if(max < arr[i].price){
                max = arr[i].price;
                id = arr[i].pid;
                qty=arr[i].qty;
	        }
	    }
	    
	    System.out.println("Highest price Product :\n Pid : "+id+", Price : "+max+", quantity : "+qty);
	    System.out.println("Total Amount Spent : "+Product.calAmount(arr));
	}
}


===============================================================================================================
40.	Create a class Student having data members name, roll no., age and score. Write a program to accept 10 records of student and store them in an array. And then arrange the student records based on the score group [0-50], [50-65], [65-80], [80-100].
----->
import java.util.*;
class Student
{
	int rno;
	String name;
	int age;
	int score;
	
	Student()
	{
		this.rno=0;
		this.name=null;
		this.age=0;
		this.score=0;
	}
	
	Student(int rno, String name,int age,int score)
	{
		this.rno=rno;
		this.name=name;
		this.age=age;
		this.score=score;
	}
	void show()
	{
		System.out.println(rno+" "+name+" "+age+" "+score);
	}
}
class StudentRecordDemo
{
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		Student arr[]=new Student[3];
		int cnt1=0,cnt2=0,cnt3=0,cnt4=0;
		for(int i=0;i<arr.length;i++)
		{
			System.out.println("Enter Student" +i+" data");
			int rno=sc.nextInt();
			String name=sc.next();
			int age=sc.nextInt();
			int score=sc.nextInt();
			arr[i]=new Student(rno,name,age,score);
		}
		for(int i=0;i<arr.length;i++)
		{
			
			if(arr[i].score>=0 && arr[i].score<=50)
			{
				System.out.println("Score Group between 0-50");
				arr[i].show();
				cnt1++;
			}
			else if(arr[i].score>50 && arr[i].score<=65)
			{
				System.out.println("Score Group between 50-65");
				arr[i].show();
				cnt2++;
			}
			else if(arr[i].score>65 && arr[i].score<=80)
			{
				System.out.println("Score Group between 65-80");
				arr[i].show();
				cnt3++;
			}
			else if(arr[i].score>80 && arr[i].score<=100)
			{
				System.out.println("Score Group between 80-100");
				arr[i].show();
				cnt4++;
			}
		}
		System.out.println("Total Student Score between 0-50 = "+cnt1);
		System.out.println("Total Student Score between 50-65 = "+cnt2);
		System.out.println("Total Student Score between 65-80 = "+cnt3);
		System.out.println("Total Student Score between 80-100 = "+cnt4);
		
		
		
	}
}
